function randomArrayItem(array) {
    return array[Math.floor(Math.random() * array.length)];
  }
  
  var imgArray = [];
    
  for (var i = 0; i < 20; i++) {
    var imgNumber = i + 1 >= 10 ? i + 1 : "0" + (i + 1);
    var imgPath = "tiles/tiles-" + imgNumber + ".jpg";
    imgArray.push(imgPath);
  }
  
  var filledCells_4 = [
    460,
    510,
    560,
    610,
    660,
    710,
    411,
    361,
    312,
    313,
    264,
    265,
    266,
    267,
    268,
    269,
    320,
    371,
    372,
    323,
    273,
    224,
    225,
    176,
    177,
    178,
    179,
    180,
    181,
    232,
    233,
    283,
    334,
    385,
    435,
    485,
    535,
    585,
    635,
    685,
    735,
    784,
    834,
    883,
    932,
    982,
    1031,
    1080,
    1079,
    1128,
    1177,
    1176,
    1175,
    1174,
    1173,
    1172,
    1171,
    1170,
    1169,
    1118,
    1117,
    1066,
    1015,
    964,
    963,
    913,
    862,
    811,
    761,
    1120,
    1020,
    1070,
    970,
    971,
    1071,
    1121,
    1021,
    1122,
    1072,
    1022,
    972,
    973,
    1023,
    1073,
    1123,
    1074,
    1124,
    1125,
    1126,
    1127,
    1078,
    1077,
    1076,
    1075,
    1024,
    1025,
    1026,
    1027,
    1030,
    1029,
    1028,
    1119,
    1069,
    1067,
    1068,
    1017,
    1016,
    1018,
    1019,
    969,
    968,
    967,
    966,
    965,
    974,
    975,
    976,
    977,
    978,
    979,
    980,
    981,
    920,
    869,
    868,
    817,
    766,
    716,
    665,
    615,
    565,
    566,
    567,
    568,
    569,
    619,
    669,
    720,
    771,
    772,
    773,
    774,
    725,
    676,
    626,
    577,
    527,
    477,
    478,
    479,
    480,
    481,
    531,
    581,
    630,
    680,
    729,
    779,
    828,
    877,
    876,
    925,
    926,
    927,
    929,
    930,
    928,
    878,
    879,
    880,
    881,
    882,
    931,
    833,
    832,
    830,
    829,
    780,
    730,
    781,
    831,
    731,
    732,
    782,
    783,
    733,
    734,
    683,
    681,
    682,
    632,
    631,
    633,
    634,
    684,
    584,
    583,
    582,
    532,
    533,
    434,
    483,
    482,
    432,
    433,
    484,
    534,
    919,
    918,
    917,
    916,
    915,
    914,
    863,
    865,
    864,
    866,
    867,
    816,
    814,
    815,
    813,
    812,
    762,
    763,
    764,
    765,
    715,
    714,
    713,
    711,
    662,
    661,
    712,
    663,
    664,
    614,
    613,
    612,
    611,
    561,
    562,
    563,
    564,
    514,
    513,
    511,
    512,
    461,
    462,
    463,
    467,
    362,
    363,
    315,
    364,
    314,
    414,
    413,
    412,
    464,
    465,
    516,
    515,
    466,
    416,
    415,
    365,
    366,
    316,
    317,
    318,
    319,
    370,
    369,
    368,
    367,
    417,
    418,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    428,
    429,
    430,
    431,
    384,
    382,
    381,
    380,
    377,
    517,
    518,
    468,
    469,
    470,
    471,
    473,
    475,
    476,
    526,
    674,
    675,
    625,
    576,
    474,
    523,
    522,
    472,
    521,
    520,
    519,
    570,
    571,
    572,
    573,
    574,
    524,
    525,
    575,
    624,
    623,
    622,
    621,
    620,
    670,
    671,
    672,
    673,
    723,
    724,
    722,
    721,
    373,
    375,
    376,
    374,
    324,
    274,
    276,
    226,
    227,
    228,
    229,
    231,
    230,
    281,
    282,
    332,
    383,
    333,
    331,
    329,
    379,
    378,
    328,
    327,
    326,
    325,
    275,
    278,
    277,
    279,
    280,
    330
  ];
  
  var initialFilledCells_4_Count = filledCells_4.length;
  
  console.log (initialFilledCells_3_Count);
  
  var easterEggIndex_4 = 470;
  
  var badooText = document.querySelector(".badoo");
  
  badooText.style.color = "#6633ff";
  
  var hints_4 = ["breach date: 1 June 2013", "compromised data: dates of birth", "compromised data: email addresses", "compromised data: passwords", "compromised data: usernames", "compromised data: names", "compromised data: genders"];
  
  var counter_4 = 302718;
  
  var box_4 = document.querySelector(".box_4");
  for (let index = 0; index < 1400; index++) {
    const element = document.createElement("div");
    element.classList.add("item_4");
  
    var hint_4 = randomArrayItem(hints_4);
    if (filledCells_4.includes(index)) {
      var elementText_4 = document.createElement("div");
      elementText_4.classList.add("item-text_4");
      console.log("preset innerHTML");
      elementText_4.innerHTML = "breached accounts: " + counter_4;
      element.appendChild(elementText_4);
    }
  
    element.addEventListener("click", function () {
      // если ячейка заполнена
      if (filledCells_4.includes(index)) {
        console.log(index);
        counter_4+= 302718;
        var hint_4 = randomArrayItem(hints_4);
        document.querySelectorAll(".item-text_4").forEach(function (itemText) {
          itemText.innerHTML = "breached accounts: " + counter_4 + " " + hint_4;
        });
        // то заменить картинку на фоне ячейки
        if (index === easterEggIndex_4) {
          // element.style.backgroundImage = "none";
          element.style.backgroundImage = "url(avatar_pawn_.svg)";
          document.querySelectorAll(".item-text_4").forEach(function (itemText) {
            itemText.innerHTML = "your data has been breached: email address, password, date of birth, gender, name"
          });
        } else {
          element.style.backgroundImage = "url(violet_star.svg)";
        }
  
        // и удалить её индекс из массива индексов заполненных ячеек
        filledCells_4 = filledCells_4.filter(function (cellIndex) {
          return cellIndex !== index;
        });
        badooText.style.opacity = filledCells_4.length / initialFilledCells_4_Count;
      }
      console.log(filledCells_4);
    });
    box_4.appendChild(element);
  }
  
  var cells_4 = document.querySelectorAll(".item_4");
  cells_4.forEach(function (cell, cellIndex) {
    if (filledCells_4.includes(cellIndex)) {
      var imageUrl = "url(badoo_tile.svg)";
      cell.style.backgroundImage = imageUrl;
    }
  });