function randomArrayItem(array) {
    return array[Math.floor(Math.random() * array.length)];
  }
  
  var imgArray = [];
    
  for (var i = 0; i < 20; i++) {
    var imgNumber = i + 1 >= 10 ? i + 1 : "0" + (i + 1);
    var imgPath = "tiles/tiles-" + imgNumber + ".jpg";
    imgArray.push(imgPath);
  }
  
  var filledCells_3 = [
    399,
    449,
    499,
    549,
    599,
    649,
    699,
    348,
    448,
    398,
    498,
    548,
    598,
    648,
    698,
    748,
    798,
    848,
    898,
    948,
    998,
    1397,
    1347,
    1247,
    1147,
    1197,
    1148,
    1098,
    1048,
    1396,
    1395,
    1393,
    1394,
    1392,
    1391,
    1390,
    1389,
    1388,
    1346,
    1345,
    1343,
    1344,
    1342,
    1340,
    1341,
    1339,
    1338,
    1337,
    1336,
    1335,
    1334,
    1333,
    1332,
    1331,
    1330,
    1279,
    1278,
    1277,
    1226,
    1176,
    1126,
    1076,
    1026,
    976,
    926,
    876,
    826,
    776,
    726,
    727,
    677,
    627,
    577,
    527,
    477,
    427,
    377,
    327,
    278,
    228,
    229,
    230,
    231,
    232,
    233,
    234,
    235,
    236,
    237,
    288,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    347,
    346,
    478,
    479,
    480,
    481,
    530,
    580,
    579,
    578,
    528,
    529,
    432,
    433,
    434,
    435,
    485,
    535,
    584,
    633,
    632,
    631,
    634,
    635,
    585,
    629,
    628,
    678,
    728,
    827,
    777,
    877,
    927,
    977,
    1027,
    1077,
    1127,
    1177,
    1227,
    1228,
    1229,
    1280,
    1281,
    1282,
    1284,
    1283,
    1285,
    1286,
    1288,
    1287,
    1289,
    1290,
    1291,
    1292,
    1293,
    1294,
    1296,
    1297,
    1295,
    397,
    447,
    497,
    547,
    597,
    647,
    697,
    747,
    797,
    847,
    897,
    947,
    997,
    1047,
    1097,
    279,
    329,
    328,
    378,
    429,
    428,
    379,
    430,
    380,
    431,
    381,
    330,
    280,
    281,
    282,
    283,
    284,
    285,
    286,
    287,
    337,
    336,
    335,
    334,
    333,
    332,
    331,
    338,
    339,
    340,
    341,
    342,
    343,
    344,
    345,
    395,
    396,
    394,
    392,
    391,
    393,
    390,
    389,
    387,
    388,
    386,
    384,
    383,
    382,
    385,
    436,
    438,
    437,
    439,
    440,
    441,
    442,
    443,
    444,
    445,
    446,
    486,
    487,
    488,
    489,
    490,
    491,
    492,
    493,
    494,
    495,
    496,
    546,
    545,
    544,
    543,
    542,
    541,
    539,
    540,
    538,
    536,
    537,
    630,
    681,
    680,
    679,
    778,
    779,
    729,
    829,
    828,
    878,
    928,
    978,
    1028,
    1078,
    1128,
    1178,
    1179,
    1129,
    1079,
    1029,
    979,
    929,
    879,
    730,
    780,
    830,
    880,
    1230,
    1180,
    1181,
    1231,
    1232,
    1182,
    1133,
    1183,
    1233,
    1234,
    1184,
    1134,
    1084,
    1034,
    984,
    934,
    885,
    835,
    785,
    735,
    685,
    636,
    637,
    638,
    587,
    586,
    590,
    589,
    588,
    591,
    592,
    594,
    593,
    595,
    596,
    646,
    645,
    643,
    641,
    640,
    639,
    642,
    644,
    689,
    739,
    690,
    692,
    691,
    693,
    743,
    744,
    745,
    746,
    696,
    695,
    694,
    794,
    845,
    795,
    796,
    946,
    896,
    846,
    996,
    1046,
    1096,
    1146,
    1196,
    1246,
    1245,
    1095,
    1145,
    1195,
    1185,
    1186,
    1187,
    1237,
    1236,
    1235,
    1238,
    1188,
    1189,
    1239,
    1240,
    1190,
    1191,
    1241,
    1242,
    1244,
    1243,
    991,
    891,
    840,
    839,
    889,
    890,
    941,
    940,
    990,
    1040,
    989,
    939,
    1090,
    1140,
    1139,
    1089,
    1039,
    1138,
    1088,
    1038,
    895,
    945,
    995,
    1045,
    1194,
    1144,
    1094,
    1044
  ];
  
  var initialFilledCells_3_Count = filledCells_3.length;
  
  console.log (initialFilledCells_3_Count);
  
  var easterEggIndex_3 = 584;
  
  var lnkdText = document.querySelector(".lnkd");
  
  lnkdText.style.color = "#3366ff";
  
  var hints_3 = ["breach date: 5 May 2012", "compromised data: email addresses", "compromised data: passwords"];
  
  var counter_3 = 413597;
  
  var box_3 = document.querySelector(".box_3");
  for (let index = 0; index < 1400; index++) {
    const element = document.createElement("div");
    element.classList.add("item_3");
  
    var hint_3 = randomArrayItem(hints_3);
    if (filledCells_3.includes(index)) {
      var elementText_3 = document.createElement("div");
      elementText_3.classList.add("item-text_3");
      console.log("preset innerHTML");
      elementText_3.innerHTML = "breached accounts: " + counter_3;
      element.appendChild(elementText_3);
    }
  
    element.addEventListener("click", function () {
      // если ячейка заполнена
      if (filledCells_3.includes(index)) {
        console.log(index);
        counter_3+= 413597;
        var hint_3 = randomArrayItem(hints_3);
        document.querySelectorAll(".item-text_3").forEach(function (itemText) {
          itemText.innerHTML = "breached accounts: " + counter_3 + " " + hint_3;
        });
        // то заменить картинку на фоне ячейки
        if (index === easterEggIndex_3) {
          // element.style.backgroundImage = "none";
          element.style.backgroundImage = "url(avatar_pawn_.svg)";
          document.querySelectorAll(".item-text_3").forEach(function (itemText) {
            itemText.innerHTML = "your data has been breached: email address, password"
          });
        } else {
          element.style.backgroundImage = "url(blue_star.svg)";
        }
  
        // и удалить её индекс из массива индексов заполненных ячеек
        filledCells_3 = filledCells_3.filter(function (cellIndex) {
          return cellIndex !== index;
        });
        lnkdText.style.opacity = filledCells_3.length / initialFilledCells_3_Count;
      }
      console.log(filledCells_3);
    });
    box_3.appendChild(element);
  }
  
  var cells_3 = document.querySelectorAll(".item_3");
  cells_3.forEach(function (cell, cellIndex) {
    if (filledCells_3.includes(cellIndex)) {
      var imageUrl = "url(linkedin_tile.svg)";
      cell.style.backgroundImage = imageUrl;
    }
  });